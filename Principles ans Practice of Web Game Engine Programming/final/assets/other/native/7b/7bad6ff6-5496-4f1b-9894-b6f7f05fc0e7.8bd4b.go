// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        v4.22.3
// source: gaiaProto.proto

package gaiaProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request Method
type GaiaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Ret   int32  `protobuf:"varint,2,opt,name=ret,proto3" json:"ret,omitempty"`
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Msg   string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	Data  []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GaiaResponse) Reset() {
	*x = GaiaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GaiaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GaiaResponse) ProtoMessage() {}

func (x *GaiaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GaiaResponse.ProtoReflect.Descriptor instead.
func (*GaiaResponse) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{0}
}

func (x *GaiaResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GaiaResponse) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GaiaResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GaiaResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GaiaResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID    int32 `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`
	Level     int32 `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`
	CardIndex int32 `protobuf:"varint,3,opt,name=CardIndex,proto3" json:"CardIndex,omitempty"`
	Star      int32 `protobuf:"varint,4,opt,name=Star,proto3" json:"Star,omitempty"`
	Count     int32 `protobuf:"varint,5,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{1}
}

func (x *Card) GetGameID() int32 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *Card) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Card) GetCardIndex() int32 {
	if x != nil {
		return x.CardIndex
	}
	return 0
}

func (x *Card) GetStar() int32 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *Card) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Mission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemID    uint32 `protobuf:"varint,1,opt,name=ItemID,proto3" json:"ItemID,omitempty"`
	ItemCount uint32 `protobuf:"varint,2,opt,name=ItemCount,proto3" json:"ItemCount,omitempty"`
	ExtendID  int64  `protobuf:"varint,3,opt,name=ExtendID,proto3" json:"ExtendID,omitempty"`
}

func (x *Mission) Reset() {
	*x = Mission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mission) ProtoMessage() {}

func (x *Mission) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mission.ProtoReflect.Descriptor instead.
func (*Mission) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{2}
}

func (x *Mission) GetItemID() uint32 {
	if x != nil {
		return x.ItemID
	}
	return 0
}

func (x *Mission) GetItemCount() uint32 {
	if x != nil {
		return x.ItemCount
	}
	return 0
}

func (x *Mission) GetExtendID() int64 {
	if x != nil {
		return x.ExtendID
	}
	return 0
}

type ServiceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissionReward uint32     `protobuf:"varint,1,opt,name=missionReward,proto3" json:"missionReward,omitempty"`
	JpType        int32      `protobuf:"varint,2,opt,name=jpType,proto3" json:"jpType,omitempty"`
	JpWin         float64    `protobuf:"fixed64,3,opt,name=jpWin,proto3" json:"jpWin,omitempty"`
	FullJpWin     float64    `protobuf:"fixed64,4,opt,name=fullJpWin,proto3" json:"fullJpWin,omitempty"`
	Trialfinish   int32      `protobuf:"varint,5,opt,name=trialfinish,proto3" json:"trialfinish,omitempty"`
	Trialaward    int32      `protobuf:"varint,6,opt,name=trialaward,proto3" json:"trialaward,omitempty"`
	Freeremain    int32      `protobuf:"varint,7,opt,name=freeremain,proto3" json:"freeremain,omitempty"`
	Cardlist      []*Card    `protobuf:"bytes,8,rep,name=cardlist,proto3" json:"cardlist,omitempty"`
	Buffmul       float64    `protobuf:"fixed64,9,opt,name=buffmul,proto3" json:"buffmul,omitempty"`
	Buffmulwin    float64    `protobuf:"fixed64,10,opt,name=buffmulwin,proto3" json:"buffmulwin,omitempty"`
	Buffexbet     int32      `protobuf:"varint,11,opt,name=buffexbet,proto3" json:"buffexbet,omitempty"`
	Bufffree      int32      `protobuf:"varint,12,opt,name=bufffree,proto3" json:"bufffree,omitempty"`
	Missionlist   []*Mission `protobuf:"bytes,13,rep,name=missionlist,proto3" json:"missionlist,omitempty"`
	ErrorMsg      string     `protobuf:"bytes,14,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
}

func (x *ServiceData) Reset() {
	*x = ServiceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceData) ProtoMessage() {}

func (x *ServiceData) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceData.ProtoReflect.Descriptor instead.
func (*ServiceData) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceData) GetMissionReward() uint32 {
	if x != nil {
		return x.MissionReward
	}
	return 0
}

func (x *ServiceData) GetJpType() int32 {
	if x != nil {
		return x.JpType
	}
	return 0
}

func (x *ServiceData) GetJpWin() float64 {
	if x != nil {
		return x.JpWin
	}
	return 0
}

func (x *ServiceData) GetFullJpWin() float64 {
	if x != nil {
		return x.FullJpWin
	}
	return 0
}

func (x *ServiceData) GetTrialfinish() int32 {
	if x != nil {
		return x.Trialfinish
	}
	return 0
}

func (x *ServiceData) GetTrialaward() int32 {
	if x != nil {
		return x.Trialaward
	}
	return 0
}

func (x *ServiceData) GetFreeremain() int32 {
	if x != nil {
		return x.Freeremain
	}
	return 0
}

func (x *ServiceData) GetCardlist() []*Card {
	if x != nil {
		return x.Cardlist
	}
	return nil
}

func (x *ServiceData) GetBuffmul() float64 {
	if x != nil {
		return x.Buffmul
	}
	return 0
}

func (x *ServiceData) GetBuffmulwin() float64 {
	if x != nil {
		return x.Buffmulwin
	}
	return 0
}

func (x *ServiceData) GetBuffexbet() int32 {
	if x != nil {
		return x.Buffexbet
	}
	return 0
}

func (x *ServiceData) GetBufffree() int32 {
	if x != nil {
		return x.Bufffree
	}
	return 0
}

func (x *ServiceData) GetMissionlist() []*Mission {
	if x != nil {
		return x.Missionlist
	}
	return nil
}

func (x *ServiceData) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type DebrisAInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
	Lang           int32  `protobuf:"varint,4,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *DebrisAInfoReq) Reset() {
	*x = DebrisAInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebrisAInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebrisAInfoReq) ProtoMessage() {}

func (x *DebrisAInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebrisAInfoReq.ProtoReflect.Descriptor instead.
func (*DebrisAInfoReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{4}
}

func (x *DebrisAInfoReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *DebrisAInfoReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DebrisAInfoReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

func (x *DebrisAInfoReq) GetLang() int32 {
	if x != nil {
		return x.Lang
	}
	return 0
}

type DebrisPInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
	Ano            int32  `protobuf:"varint,4,opt,name=ano,proto3" json:"ano,omitempty"`
}

func (x *DebrisPInfoReq) Reset() {
	*x = DebrisPInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebrisPInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebrisPInfoReq) ProtoMessage() {}

func (x *DebrisPInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebrisPInfoReq.ProtoReflect.Descriptor instead.
func (*DebrisPInfoReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{5}
}

func (x *DebrisPInfoReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *DebrisPInfoReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DebrisPInfoReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

func (x *DebrisPInfoReq) GetAno() int32 {
	if x != nil {
		return x.Ano
	}
	return 0
}

type DebrisPGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
}

func (x *DebrisPGetReq) Reset() {
	*x = DebrisPGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebrisPGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebrisPGetReq) ProtoMessage() {}

func (x *DebrisPGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebrisPGetReq.ProtoReflect.Descriptor instead.
func (*DebrisPGetReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{6}
}

func (x *DebrisPGetReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *DebrisPGetReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DebrisPGetReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

type DebrisExchangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
	Ano            int32  `protobuf:"varint,4,opt,name=ano,proto3" json:"ano,omitempty"`
	Fno            int32  `protobuf:"varint,5,opt,name=fno,proto3" json:"fno,omitempty"`
	Amount         int32  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *DebrisExchangeReq) Reset() {
	*x = DebrisExchangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebrisExchangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebrisExchangeReq) ProtoMessage() {}

func (x *DebrisExchangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebrisExchangeReq.ProtoReflect.Descriptor instead.
func (*DebrisExchangeReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{7}
}

func (x *DebrisExchangeReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *DebrisExchangeReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DebrisExchangeReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

func (x *DebrisExchangeReq) GetAno() int32 {
	if x != nil {
		return x.Ano
	}
	return 0
}

func (x *DebrisExchangeReq) GetFno() int32 {
	if x != nil {
		return x.Fno
	}
	return 0
}

func (x *DebrisExchangeReq) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type FullJPInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *FullJPInfoReq) Reset() {
	*x = FullJPInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullJPInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullJPInfoReq) ProtoMessage() {}

func (x *FullJPInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullJPInfoReq.ProtoReflect.Descriptor instead.
func (*FullJPInfoReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{8}
}

func (x *FullJPInfoReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *FullJPInfoReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type FullJPInfoAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *FullJPInfoAllReq) Reset() {
	*x = FullJPInfoAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullJPInfoAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullJPInfoAllReq) ProtoMessage() {}

func (x *FullJPInfoAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullJPInfoAllReq.ProtoReflect.Descriptor instead.
func (*FullJPInfoAllReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{9}
}

func (x *FullJPInfoAllReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *FullJPInfoAllReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type FullJPHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *FullJPHistoryReq) Reset() {
	*x = FullJPHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullJPHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullJPHistoryReq) ProtoMessage() {}

func (x *FullJPHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullJPHistoryReq.ProtoReflect.Descriptor instead.
func (*FullJPHistoryReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{10}
}

func (x *FullJPHistoryReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *FullJPHistoryReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type FullJPInfoAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Full   float64 `protobuf:"fixed64,2,opt,name=full,proto3" json:"full,omitempty"`
	Minvip int32   `protobuf:"varint,3,opt,name=minvip,proto3" json:"minvip,omitempty"`
	Minbet float64 `protobuf:"fixed64,4,opt,name=minbet,proto3" json:"minbet,omitempty"`
}

func (x *FullJPInfoAck) Reset() {
	*x = FullJPInfoAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullJPInfoAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullJPInfoAck) ProtoMessage() {}

func (x *FullJPInfoAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullJPInfoAck.ProtoReflect.Descriptor instead.
func (*FullJPInfoAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{11}
}

func (x *FullJPInfoAck) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *FullJPInfoAck) GetFull() float64 {
	if x != nil {
		return x.Full
	}
	return 0
}

func (x *FullJPInfoAck) GetMinvip() int32 {
	if x != nil {
		return x.Minvip
	}
	return 0
}

func (x *FullJPInfoAck) GetMinbet() float64 {
	if x != nil {
		return x.Minbet
	}
	return 0
}

type FullJPInfoAllAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acktype int32         `protobuf:"varint,1,opt,name=acktype,proto3" json:"acktype,omitempty"`
	List    []*FullJPList `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FullJPInfoAllAck) Reset() {
	*x = FullJPInfoAllAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullJPInfoAllAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullJPInfoAllAck) ProtoMessage() {}

func (x *FullJPInfoAllAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullJPInfoAllAck.ProtoReflect.Descriptor instead.
func (*FullJPInfoAllAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{12}
}

func (x *FullJPInfoAllAck) GetAcktype() int32 {
	if x != nil {
		return x.Acktype
	}
	return 0
}

func (x *FullJPInfoAllAck) GetList() []*FullJPList {
	if x != nil {
		return x.List
	}
	return nil
}

type FullJPList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apiid  int32   `protobuf:"varint,1,opt,name=apiid,proto3" json:"apiid,omitempty"`
	Gameid int32   `protobuf:"varint,2,opt,name=gameid,proto3" json:"gameid,omitempty"`
	Value  float64 `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	Full   float64 `protobuf:"fixed64,4,opt,name=full,proto3" json:"full,omitempty"`
}

func (x *FullJPList) Reset() {
	*x = FullJPList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullJPList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullJPList) ProtoMessage() {}

func (x *FullJPList) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullJPList.ProtoReflect.Descriptor instead.
func (*FullJPList) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{13}
}

func (x *FullJPList) GetApiid() int32 {
	if x != nil {
		return x.Apiid
	}
	return 0
}

func (x *FullJPList) GetGameid() int32 {
	if x != nil {
		return x.Gameid
	}
	return 0
}

func (x *FullJPList) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *FullJPList) GetFull() float64 {
	if x != nil {
		return x.Full
	}
	return 0
}

type FullJPHistoryAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*FullJPHistoryData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FullJPHistoryAck) Reset() {
	*x = FullJPHistoryAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullJPHistoryAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullJPHistoryAck) ProtoMessage() {}

func (x *FullJPHistoryAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullJPHistoryAck.ProtoReflect.Descriptor instead.
func (*FullJPHistoryAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{14}
}

func (x *FullJPHistoryAck) GetList() []*FullJPHistoryData {
	if x != nil {
		return x.List
	}
	return nil
}

type FullJPHistoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Winner   string  `protobuf:"bytes,1,opt,name=winner,proto3" json:"winner,omitempty"`
	Nickname string  `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Win      float64 `protobuf:"fixed64,3,opt,name=win,proto3" json:"win,omitempty"`
	Time     int32   `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *FullJPHistoryData) Reset() {
	*x = FullJPHistoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullJPHistoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullJPHistoryData) ProtoMessage() {}

func (x *FullJPHistoryData) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullJPHistoryData.ProtoReflect.Descriptor instead.
func (*FullJPHistoryData) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{15}
}

func (x *FullJPHistoryData) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

func (x *FullJPHistoryData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *FullJPHistoryData) GetWin() float64 {
	if x != nil {
		return x.Win
	}
	return 0
}

func (x *FullJPHistoryData) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

type ItemListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Lang           int32  `protobuf:"varint,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Currencynumber int32  `protobuf:"varint,4,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
}

func (x *ItemListReq) Reset() {
	*x = ItemListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemListReq) ProtoMessage() {}

func (x *ItemListReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemListReq.ProtoReflect.Descriptor instead.
func (*ItemListReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{16}
}

func (x *ItemListReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ItemListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ItemListReq) GetLang() int32 {
	if x != nil {
		return x.Lang
	}
	return 0
}

func (x *ItemListReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

type ItemAllGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Lang           int32  `protobuf:"varint,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Currencynumber int32  `protobuf:"varint,4,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
}

func (x *ItemAllGameReq) Reset() {
	*x = ItemAllGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemAllGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemAllGameReq) ProtoMessage() {}

func (x *ItemAllGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemAllGameReq.ProtoReflect.Descriptor instead.
func (*ItemAllGameReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{17}
}

func (x *ItemAllGameReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ItemAllGameReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ItemAllGameReq) GetLang() int32 {
	if x != nil {
		return x.Lang
	}
	return 0
}

func (x *ItemAllGameReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

type ItemUseCardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
	Itemindex      string `protobuf:"bytes,4,opt,name=itemindex,proto3" json:"itemindex,omitempty"`
	Itemid         string `protobuf:"bytes,5,opt,name=itemid,proto3" json:"itemid,omitempty"`
	Amount         string `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ItemUseCardReq) Reset() {
	*x = ItemUseCardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseCardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseCardReq) ProtoMessage() {}

func (x *ItemUseCardReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseCardReq.ProtoReflect.Descriptor instead.
func (*ItemUseCardReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{18}
}

func (x *ItemUseCardReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ItemUseCardReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ItemUseCardReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

func (x *ItemUseCardReq) GetItemindex() string {
	if x != nil {
		return x.Itemindex
	}
	return ""
}

func (x *ItemUseCardReq) GetItemid() string {
	if x != nil {
		return x.Itemid
	}
	return ""
}

func (x *ItemUseCardReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type ItemCheckNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ItemCheckNewReq) Reset() {
	*x = ItemCheckNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemCheckNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemCheckNewReq) ProtoMessage() {}

func (x *ItemCheckNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemCheckNewReq.ProtoReflect.Descriptor instead.
func (*ItemCheckNewReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{19}
}

func (x *ItemCheckNewReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ItemCheckNewReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ItemGetMailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
}

func (x *ItemGetMailReq) Reset() {
	*x = ItemGetMailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGetMailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGetMailReq) ProtoMessage() {}

func (x *ItemGetMailReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGetMailReq.ProtoReflect.Descriptor instead.
func (*ItemGetMailReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{20}
}

func (x *ItemGetMailReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ItemGetMailReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ItemGetMailReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

type ItemSetReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
}

func (x *ItemSetReadReq) Reset() {
	*x = ItemSetReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSetReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSetReadReq) ProtoMessage() {}

func (x *ItemSetReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSetReadReq.ProtoReflect.Descriptor instead.
func (*ItemSetReadReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{21}
}

func (x *ItemSetReadReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ItemSetReadReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ItemSetReadReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

type MissionDailyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Lang           string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Currencynumber int32  `protobuf:"varint,4,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
	IsNow          bool   `protobuf:"varint,5,opt,name=isNow,proto3" json:"isNow,omitempty"`
	Level          int32  `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *MissionDailyReq) Reset() {
	*x = MissionDailyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionDailyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionDailyReq) ProtoMessage() {}

func (x *MissionDailyReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionDailyReq.ProtoReflect.Descriptor instead.
func (*MissionDailyReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{22}
}

func (x *MissionDailyReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *MissionDailyReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *MissionDailyReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *MissionDailyReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

func (x *MissionDailyReq) GetIsNow() bool {
	if x != nil {
		return x.IsNow
	}
	return false
}

func (x *MissionDailyReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ReplayListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
}

func (x *ReplayListReq) Reset() {
	*x = ReplayListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayListReq) ProtoMessage() {}

func (x *ReplayListReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayListReq.ProtoReflect.Descriptor instead.
func (*ReplayListReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{23}
}

func (x *ReplayListReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ReplayListReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReplayListReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

type ReplayGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Index string `protobuf:"bytes,3,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ReplayGetReq) Reset() {
	*x = ReplayGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayGetReq) ProtoMessage() {}

func (x *ReplayGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayGetReq.ProtoReflect.Descriptor instead.
func (*ReplayGetReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{24}
}

func (x *ReplayGetReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ReplayGetReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReplayGetReq) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

type ReplayCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ReplayCheckReq) Reset() {
	*x = ReplayCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayCheckReq) ProtoMessage() {}

func (x *ReplayCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayCheckReq.ProtoReflect.Descriptor instead.
func (*ReplayCheckReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{25}
}

func (x *ReplayCheckReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ReplayCheckReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ReplayListAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acktype int32        `protobuf:"varint,1,opt,name=acktype,proto3" json:"acktype,omitempty"`
	List    []*ReplayLDF `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ReplayListAck) Reset() {
	*x = ReplayListAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayListAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayListAck) ProtoMessage() {}

func (x *ReplayListAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayListAck.ProtoReflect.Descriptor instead.
func (*ReplayListAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{26}
}

func (x *ReplayListAck) GetAcktype() int32 {
	if x != nil {
		return x.Acktype
	}
	return 0
}

func (x *ReplayListAck) GetList() []*ReplayLDF {
	if x != nil {
		return x.List
	}
	return nil
}

type ReplayLDF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Row []*ReplayLClient `protobuf:"bytes,1,rep,name=row,proto3" json:"row,omitempty"`
}

func (x *ReplayLDF) Reset() {
	*x = ReplayLDF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayLDF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayLDF) ProtoMessage() {}

func (x *ReplayLDF) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayLDF.ProtoReflect.Descriptor instead.
func (*ReplayLDF) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{27}
}

func (x *ReplayLDF) GetRow() []*ReplayLClient {
	if x != nil {
		return x.Row
	}
	return nil
}

type ReplayLClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid        int32   `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Account    string  `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Name       string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Bet        float64 `protobuf:"fixed64,4,opt,name=bet,proto3" json:"bet,omitempty"`
	Win        float64 `protobuf:"fixed64,5,opt,name=win,proto3" json:"win,omitempty"`
	Odd        float64 `protobuf:"fixed64,6,opt,name=odd,proto3" json:"odd,omitempty"`
	Adjustwin  float64 `protobuf:"fixed64,7,opt,name=adjustwin,proto3" json:"adjustwin,omitempty"`
	Currency   int32   `protobuf:"varint,8,opt,name=currency,proto3" json:"currency,omitempty"`
	Currsymbol string  `protobuf:"bytes,9,opt,name=currsymbol,proto3" json:"currsymbol,omitempty"`
	Currunit   float64 `protobuf:"fixed64,10,opt,name=currunit,proto3" json:"currunit,omitempty"`
	Time       string  `protobuf:"bytes,11,opt,name=time,proto3" json:"time,omitempty"`
	Index      string  `protobuf:"bytes,12,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ReplayLClient) Reset() {
	*x = ReplayLClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayLClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayLClient) ProtoMessage() {}

func (x *ReplayLClient) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayLClient.ProtoReflect.Descriptor instead.
func (*ReplayLClient) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{28}
}

func (x *ReplayLClient) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ReplayLClient) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ReplayLClient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReplayLClient) GetBet() float64 {
	if x != nil {
		return x.Bet
	}
	return 0
}

func (x *ReplayLClient) GetWin() float64 {
	if x != nil {
		return x.Win
	}
	return 0
}

func (x *ReplayLClient) GetOdd() float64 {
	if x != nil {
		return x.Odd
	}
	return 0
}

func (x *ReplayLClient) GetAdjustwin() float64 {
	if x != nil {
		return x.Adjustwin
	}
	return 0
}

func (x *ReplayLClient) GetCurrency() int32 {
	if x != nil {
		return x.Currency
	}
	return 0
}

func (x *ReplayLClient) GetCurrsymbol() string {
	if x != nil {
		return x.Currsymbol
	}
	return ""
}

func (x *ReplayLClient) GetCurrunit() float64 {
	if x != nil {
		return x.Currunit
	}
	return 0
}

func (x *ReplayLClient) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ReplayLClient) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

type ReplayGetAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acktype int32  `protobuf:"varint,1,opt,name=acktype,proto3" json:"acktype,omitempty"`
	Ack     string `protobuf:"bytes,2,opt,name=ack,proto3" json:"ack,omitempty"`
}

func (x *ReplayGetAck) Reset() {
	*x = ReplayGetAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayGetAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayGetAck) ProtoMessage() {}

func (x *ReplayGetAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayGetAck.ProtoReflect.Descriptor instead.
func (*ReplayGetAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{29}
}

func (x *ReplayGetAck) GetAcktype() int32 {
	if x != nil {
		return x.Acktype
	}
	return 0
}

func (x *ReplayGetAck) GetAck() string {
	if x != nil {
		return x.Ack
	}
	return ""
}

type ReplayCheckAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acktype  int32 `protobuf:"varint,1,opt,name=acktype,proto3" json:"acktype,omitempty"`
	Needinit bool  `protobuf:"varint,2,opt,name=needinit,proto3" json:"needinit,omitempty"`
}

func (x *ReplayCheckAck) Reset() {
	*x = ReplayCheckAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayCheckAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayCheckAck) ProtoMessage() {}

func (x *ReplayCheckAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayCheckAck.ProtoReflect.Descriptor instead.
func (*ReplayCheckAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{30}
}

func (x *ReplayCheckAck) GetAcktype() int32 {
	if x != nil {
		return x.Acktype
	}
	return 0
}

func (x *ReplayCheckAck) GetNeedinit() bool {
	if x != nil {
		return x.Needinit
	}
	return false
}

type TrialInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Vip   int32  `protobuf:"varint,3,opt,name=vip,proto3" json:"vip,omitempty"`
	Lang  int32  `protobuf:"varint,4,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *TrialInfoReq) Reset() {
	*x = TrialInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrialInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrialInfoReq) ProtoMessage() {}

func (x *TrialInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrialInfoReq.ProtoReflect.Descriptor instead.
func (*TrialInfoReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{31}
}

func (x *TrialInfoReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *TrialInfoReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TrialInfoReq) GetVip() int32 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *TrialInfoReq) GetLang() int32 {
	if x != nil {
		return x.Lang
	}
	return 0
}

type TrialSignUpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Vip   int32  `protobuf:"varint,3,opt,name=vip,proto3" json:"vip,omitempty"`
	Actno int32  `protobuf:"varint,4,opt,name=actno,proto3" json:"actno,omitempty"`
}

func (x *TrialSignUpReq) Reset() {
	*x = TrialSignUpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrialSignUpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrialSignUpReq) ProtoMessage() {}

func (x *TrialSignUpReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrialSignUpReq.ProtoReflect.Descriptor instead.
func (*TrialSignUpReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{32}
}

func (x *TrialSignUpReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *TrialSignUpReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TrialSignUpReq) GetVip() int32 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *TrialSignUpReq) GetActno() int32 {
	if x != nil {
		return x.Actno
	}
	return 0
}

type TrialGiveUpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Actno int32  `protobuf:"varint,3,opt,name=actno,proto3" json:"actno,omitempty"`
}

func (x *TrialGiveUpReq) Reset() {
	*x = TrialGiveUpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrialGiveUpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrialGiveUpReq) ProtoMessage() {}

func (x *TrialGiveUpReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrialGiveUpReq.ProtoReflect.Descriptor instead.
func (*TrialGiveUpReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{33}
}

func (x *TrialGiveUpReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *TrialGiveUpReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TrialGiveUpReq) GetActno() int32 {
	if x != nil {
		return x.Actno
	}
	return 0
}

type TrialInfoAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acktype    int32         `protobuf:"varint,1,opt,name=acktype,proto3" json:"acktype,omitempty"`
	Nowactno   int32         `protobuf:"varint,2,opt,name=nowactno,proto3" json:"nowactno,omitempty"`
	Targettype int32         `protobuf:"varint,3,opt,name=targettype,proto3" json:"targettype,omitempty"`
	Awarddesc  []*TrialAward `protobuf:"bytes,4,rep,name=awarddesc,proto3" json:"awarddesc,omitempty"`
	Pstate     int32         `protobuf:"varint,5,opt,name=pstate,proto3" json:"pstate,omitempty"`
	Trialinfo  *TrialPData   `protobuf:"bytes,6,opt,name=trialinfo,proto3" json:"trialinfo,omitempty"`
	Bet        []float64     `protobuf:"fixed64,7,rep,packed,name=bet,proto3" json:"bet,omitempty"`
	Remind     bool          `protobuf:"varint,8,opt,name=remind,proto3" json:"remind,omitempty"`
	Remindinfo *TrialAward   `protobuf:"bytes,9,opt,name=remindinfo,proto3" json:"remindinfo,omitempty"`
	Rtags      []int32       `protobuf:"varint,10,rep,packed,name=rtags,proto3" json:"rtags,omitempty"`
	Start      string        `protobuf:"bytes,11,opt,name=start,proto3" json:"start,omitempty"`
	End        string        `protobuf:"bytes,12,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *TrialInfoAck) Reset() {
	*x = TrialInfoAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrialInfoAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrialInfoAck) ProtoMessage() {}

func (x *TrialInfoAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrialInfoAck.ProtoReflect.Descriptor instead.
func (*TrialInfoAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{34}
}

func (x *TrialInfoAck) GetAcktype() int32 {
	if x != nil {
		return x.Acktype
	}
	return 0
}

func (x *TrialInfoAck) GetNowactno() int32 {
	if x != nil {
		return x.Nowactno
	}
	return 0
}

func (x *TrialInfoAck) GetTargettype() int32 {
	if x != nil {
		return x.Targettype
	}
	return 0
}

func (x *TrialInfoAck) GetAwarddesc() []*TrialAward {
	if x != nil {
		return x.Awarddesc
	}
	return nil
}

func (x *TrialInfoAck) GetPstate() int32 {
	if x != nil {
		return x.Pstate
	}
	return 0
}

func (x *TrialInfoAck) GetTrialinfo() *TrialPData {
	if x != nil {
		return x.Trialinfo
	}
	return nil
}

func (x *TrialInfoAck) GetBet() []float64 {
	if x != nil {
		return x.Bet
	}
	return nil
}

func (x *TrialInfoAck) GetRemind() bool {
	if x != nil {
		return x.Remind
	}
	return false
}

func (x *TrialInfoAck) GetRemindinfo() *TrialAward {
	if x != nil {
		return x.Remindinfo
	}
	return nil
}

func (x *TrialInfoAck) GetRtags() []int32 {
	if x != nil {
		return x.Rtags
	}
	return nil
}

func (x *TrialInfoAck) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *TrialInfoAck) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

type TrialAward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Award  int32      `protobuf:"varint,1,opt,name=award,proto3" json:"award,omitempty"`
	Type   int32      `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Gate   float64    `protobuf:"fixed64,3,opt,name=gate,proto3" json:"gate,omitempty"`
	Gameid int32      `protobuf:"varint,4,opt,name=gameid,proto3" json:"gameid,omitempty"`
	Itemid int32      `protobuf:"varint,5,opt,name=itemid,proto3" json:"itemid,omitempty"`
	Amount int32      `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Data   *TrialItem `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	Money  float64    `protobuf:"fixed64,8,opt,name=money,proto3" json:"money,omitempty"`
}

func (x *TrialAward) Reset() {
	*x = TrialAward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrialAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrialAward) ProtoMessage() {}

func (x *TrialAward) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrialAward.ProtoReflect.Descriptor instead.
func (*TrialAward) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{35}
}

func (x *TrialAward) GetAward() int32 {
	if x != nil {
		return x.Award
	}
	return 0
}

func (x *TrialAward) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TrialAward) GetGate() float64 {
	if x != nil {
		return x.Gate
	}
	return 0
}

func (x *TrialAward) GetGameid() int32 {
	if x != nil {
		return x.Gameid
	}
	return 0
}

func (x *TrialAward) GetItemid() int32 {
	if x != nil {
		return x.Itemid
	}
	return 0
}

func (x *TrialAward) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TrialAward) GetData() *TrialItem {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TrialAward) GetMoney() float64 {
	if x != nil {
		return x.Money
	}
	return 0
}

type TrialItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Star     int32   `protobuf:"varint,1,opt,name=star,proto3" json:"star,omitempty"`
	Icon     int32   `protobuf:"varint,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Type     int32   `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Bet      float64 `protobuf:"fixed64,4,opt,name=bet,proto3" json:"bet,omitempty"`
	Gamename string  `protobuf:"bytes,5,opt,name=gamename,proto3" json:"gamename,omitempty"`
}

func (x *TrialItem) Reset() {
	*x = TrialItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrialItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrialItem) ProtoMessage() {}

func (x *TrialItem) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrialItem.ProtoReflect.Descriptor instead.
func (*TrialItem) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{36}
}

func (x *TrialItem) GetStar() int32 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *TrialItem) GetIcon() int32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *TrialItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TrialItem) GetBet() float64 {
	if x != nil {
		return x.Bet
	}
	return 0
}

func (x *TrialItem) GetGamename() string {
	if x != nil {
		return x.Gamename
	}
	return ""
}

type TrialPData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apiid      int32   `protobuf:"varint,1,opt,name=apiid,proto3" json:"apiid,omitempty"`
	Gameid     int32   `protobuf:"varint,2,opt,name=gameid,proto3" json:"gameid,omitempty"`
	Sac        int32   `protobuf:"varint,3,opt,name=sac,proto3" json:"sac,omitempty"`
	Activityno int32   `protobuf:"varint,4,opt,name=activityno,proto3" json:"activityno,omitempty"`
	Totalbet   float64 `protobuf:"fixed64,5,opt,name=totalbet,proto3" json:"totalbet,omitempty"`
	Totalwin   float64 `protobuf:"fixed64,6,opt,name=totalwin,proto3" json:"totalwin,omitempty"`
	Property   float64 `protobuf:"fixed64,7,opt,name=property,proto3" json:"property,omitempty"`
}

func (x *TrialPData) Reset() {
	*x = TrialPData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrialPData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrialPData) ProtoMessage() {}

func (x *TrialPData) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrialPData.ProtoReflect.Descriptor instead.
func (*TrialPData) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{37}
}

func (x *TrialPData) GetApiid() int32 {
	if x != nil {
		return x.Apiid
	}
	return 0
}

func (x *TrialPData) GetGameid() int32 {
	if x != nil {
		return x.Gameid
	}
	return 0
}

func (x *TrialPData) GetSac() int32 {
	if x != nil {
		return x.Sac
	}
	return 0
}

func (x *TrialPData) GetActivityno() int32 {
	if x != nil {
		return x.Activityno
	}
	return 0
}

func (x *TrialPData) GetTotalbet() float64 {
	if x != nil {
		return x.Totalbet
	}
	return 0
}

func (x *TrialPData) GetTotalwin() float64 {
	if x != nil {
		return x.Totalwin
	}
	return 0
}

func (x *TrialPData) GetProperty() float64 {
	if x != nil {
		return x.Property
	}
	return 0
}

type TrialSignUpAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acktype   int32       `protobuf:"varint,1,opt,name=acktype,proto3" json:"acktype,omitempty"`
	Trialinfo *TrialPData `protobuf:"bytes,2,opt,name=trialinfo,proto3" json:"trialinfo,omitempty"`
}

func (x *TrialSignUpAck) Reset() {
	*x = TrialSignUpAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrialSignUpAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrialSignUpAck) ProtoMessage() {}

func (x *TrialSignUpAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrialSignUpAck.ProtoReflect.Descriptor instead.
func (*TrialSignUpAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{38}
}

func (x *TrialSignUpAck) GetAcktype() int32 {
	if x != nil {
		return x.Acktype
	}
	return 0
}

func (x *TrialSignUpAck) GetTrialinfo() *TrialPData {
	if x != nil {
		return x.Trialinfo
	}
	return nil
}

type TrialGiveUpAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acktype int32 `protobuf:"varint,1,opt,name=acktype,proto3" json:"acktype,omitempty"`
	Award   int32 `protobuf:"varint,2,opt,name=award,proto3" json:"award,omitempty"`
}

func (x *TrialGiveUpAck) Reset() {
	*x = TrialGiveUpAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrialGiveUpAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrialGiveUpAck) ProtoMessage() {}

func (x *TrialGiveUpAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrialGiveUpAck.ProtoReflect.Descriptor instead.
func (*TrialGiveUpAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{39}
}

func (x *TrialGiveUpAck) GetAcktype() int32 {
	if x != nil {
		return x.Acktype
	}
	return 0
}

func (x *TrialGiveUpAck) GetAward() int32 {
	if x != nil {
		return x.Award
	}
	return 0
}

type UnionJPInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UnionJPInfoReq) Reset() {
	*x = UnionJPInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionJPInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionJPInfoReq) ProtoMessage() {}

func (x *UnionJPInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionJPInfoReq.ProtoReflect.Descriptor instead.
func (*UnionJPInfoReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{40}
}

func (x *UnionJPInfoReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *UnionJPInfoReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UnionJPInfoAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UnionJPInfoAllReq) Reset() {
	*x = UnionJPInfoAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionJPInfoAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionJPInfoAllReq) ProtoMessage() {}

func (x *UnionJPInfoAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionJPInfoAllReq.ProtoReflect.Descriptor instead.
func (*UnionJPInfoAllReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{41}
}

func (x *UnionJPInfoAllReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *UnionJPInfoAllReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UnionJPHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UnionJPHistoryReq) Reset() {
	*x = UnionJPHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionJPHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionJPHistoryReq) ProtoMessage() {}

func (x *UnionJPHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionJPHistoryReq.ProtoReflect.Descriptor instead.
func (*UnionJPHistoryReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{42}
}

func (x *UnionJPHistoryReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *UnionJPHistoryReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UnionJPBlockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
}

func (x *UnionJPBlockReq) Reset() {
	*x = UnionJPBlockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionJPBlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionJPBlockReq) ProtoMessage() {}

func (x *UnionJPBlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionJPBlockReq.ProtoReflect.Descriptor instead.
func (*UnionJPBlockReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{43}
}

func (x *UnionJPBlockReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *UnionJPBlockReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UnionJPBlockReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

type UnionJPInfoAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UnionJPPool `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UnionJPInfoAck) Reset() {
	*x = UnionJPInfoAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionJPInfoAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionJPInfoAck) ProtoMessage() {}

func (x *UnionJPInfoAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionJPInfoAck.ProtoReflect.Descriptor instead.
func (*UnionJPInfoAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{44}
}

func (x *UnionJPInfoAck) GetList() []*UnionJPPool {
	if x != nil {
		return x.List
	}
	return nil
}

type UnionJPPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UnionJPPool) Reset() {
	*x = UnionJPPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionJPPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionJPPool) ProtoMessage() {}

func (x *UnionJPPool) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionJPPool.ProtoReflect.Descriptor instead.
func (*UnionJPPool) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{45}
}

func (x *UnionJPPool) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UnionJPPool) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type UnionJPInfoAllAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plist []*UnionJPPool `protobuf:"bytes,1,rep,name=plist,proto3" json:"plist,omitempty"`
	Glist []int32        `protobuf:"varint,2,rep,packed,name=glist,proto3" json:"glist,omitempty"`
}

func (x *UnionJPInfoAllAck) Reset() {
	*x = UnionJPInfoAllAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionJPInfoAllAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionJPInfoAllAck) ProtoMessage() {}

func (x *UnionJPInfoAllAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionJPInfoAllAck.ProtoReflect.Descriptor instead.
func (*UnionJPInfoAllAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{46}
}

func (x *UnionJPInfoAllAck) GetPlist() []*UnionJPPool {
	if x != nil {
		return x.Plist
	}
	return nil
}

func (x *UnionJPInfoAllAck) GetGlist() []int32 {
	if x != nil {
		return x.Glist
	}
	return nil
}

type UnionJPHistoryAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UnionJPHistoryData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UnionJPHistoryAck) Reset() {
	*x = UnionJPHistoryAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionJPHistoryAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionJPHistoryAck) ProtoMessage() {}

func (x *UnionJPHistoryAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionJPHistoryAck.ProtoReflect.Descriptor instead.
func (*UnionJPHistoryAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{47}
}

func (x *UnionJPHistoryAck) GetList() []*UnionJPHistoryData {
	if x != nil {
		return x.List
	}
	return nil
}

type UnionJPHistoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     int32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Winner   string  `protobuf:"bytes,2,opt,name=winner,proto3" json:"winner,omitempty"`
	Nickname string  `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Win      float64 `protobuf:"fixed64,4,opt,name=win,proto3" json:"win,omitempty"`
	GameID   int32   `protobuf:"varint,5,opt,name=gameID,proto3" json:"gameID,omitempty"`
}

func (x *UnionJPHistoryData) Reset() {
	*x = UnionJPHistoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionJPHistoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionJPHistoryData) ProtoMessage() {}

func (x *UnionJPHistoryData) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionJPHistoryData.ProtoReflect.Descriptor instead.
func (*UnionJPHistoryData) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{48}
}

func (x *UnionJPHistoryData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UnionJPHistoryData) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

func (x *UnionJPHistoryData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UnionJPHistoryData) GetWin() float64 {
	if x != nil {
		return x.Win
	}
	return 0
}

func (x *UnionJPHistoryData) GetGameID() int32 {
	if x != nil {
		return x.GameID
	}
	return 0
}

type UnionJPBlockAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []float64 `protobuf:"fixed64,1,rep,packed,name=list,proto3" json:"list,omitempty"`
}

func (x *UnionJPBlockAck) Reset() {
	*x = UnionJPBlockAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnionJPBlockAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnionJPBlockAck) ProtoMessage() {}

func (x *UnionJPBlockAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnionJPBlockAck.ProtoReflect.Descriptor instead.
func (*UnionJPBlockAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{49}
}

func (x *UnionJPBlockAck) GetList() []float64 {
	if x != nil {
		return x.List
	}
	return nil
}

type VipSignInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
}

func (x *VipSignInfoReq) Reset() {
	*x = VipSignInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipSignInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSignInfoReq) ProtoMessage() {}

func (x *VipSignInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSignInfoReq.ProtoReflect.Descriptor instead.
func (*VipSignInfoReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{50}
}

func (x *VipSignInfoReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *VipSignInfoReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VipSignInfoReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

type VipSignRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
	Index          string `protobuf:"bytes,4,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *VipSignRewardReq) Reset() {
	*x = VipSignRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipSignRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSignRewardReq) ProtoMessage() {}

func (x *VipSignRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSignRewardReq.ProtoReflect.Descriptor instead.
func (*VipSignRewardReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{51}
}

func (x *VipSignRewardReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *VipSignRewardReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VipSignRewardReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

func (x *VipSignRewardReq) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

type VipSignInfoAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *VipSignInfoData `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Result int32            `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *VipSignInfoAck) Reset() {
	*x = VipSignInfoAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipSignInfoAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSignInfoAck) ProtoMessage() {}

func (x *VipSignInfoAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSignInfoAck.ProtoReflect.Descriptor instead.
func (*VipSignInfoAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{52}
}

func (x *VipSignInfoAck) GetInfo() *VipSignInfoData {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *VipSignInfoAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type VipSignInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Treasurelist []*VipSignTreasure `protobuf:"bytes,1,rep,name=treasurelist,proto3" json:"treasurelist,omitempty"`
	Expiredtime  string             `protobuf:"bytes,2,opt,name=expiredtime,proto3" json:"expiredtime,omitempty"`
	Error        int32              `protobuf:"varint,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *VipSignInfoData) Reset() {
	*x = VipSignInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipSignInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSignInfoData) ProtoMessage() {}

func (x *VipSignInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSignInfoData.ProtoReflect.Descriptor instead.
func (*VipSignInfoData) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{53}
}

func (x *VipSignInfoData) GetTreasurelist() []*VipSignTreasure {
	if x != nil {
		return x.Treasurelist
	}
	return nil
}

func (x *VipSignInfoData) GetExpiredtime() string {
	if x != nil {
		return x.Expiredtime
	}
	return ""
}

func (x *VipSignInfoData) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

type VipSignTreasure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  string  `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Minvip int32   `protobuf:"varint,2,opt,name=minvip,proto3" json:"minvip,omitempty"`
	Exp    float64 `protobuf:"fixed64,3,opt,name=exp,proto3" json:"exp,omitempty"`
	Isopen bool    `protobuf:"varint,4,opt,name=isopen,proto3" json:"isopen,omitempty"`
}

func (x *VipSignTreasure) Reset() {
	*x = VipSignTreasure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipSignTreasure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSignTreasure) ProtoMessage() {}

func (x *VipSignTreasure) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSignTreasure.ProtoReflect.Descriptor instead.
func (*VipSignTreasure) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{54}
}

func (x *VipSignTreasure) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *VipSignTreasure) GetMinvip() int32 {
	if x != nil {
		return x.Minvip
	}
	return 0
}

func (x *VipSignTreasure) GetExp() float64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *VipSignTreasure) GetIsopen() bool {
	if x != nil {
		return x.Isopen
	}
	return false
}

type VipSignRewardAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *VipSignRewardData `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Result int32              `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *VipSignRewardAck) Reset() {
	*x = VipSignRewardAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipSignRewardAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSignRewardAck) ProtoMessage() {}

func (x *VipSignRewardAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSignRewardAck.ProtoReflect.Descriptor instead.
func (*VipSignRewardAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{55}
}

func (x *VipSignRewardAck) GetInfo() *VipSignRewardData {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *VipSignRewardAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type VipSignRewardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Itemid int32 `protobuf:"varint,1,opt,name=itemid,proto3" json:"itemid,omitempty"`
	Count  int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Error  int32 `protobuf:"varint,3,opt,name=error,proto3" json:"error,omitempty"`
	Icon   int32 `protobuf:"varint,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *VipSignRewardData) Reset() {
	*x = VipSignRewardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipSignRewardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSignRewardData) ProtoMessage() {}

func (x *VipSignRewardData) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSignRewardData.ProtoReflect.Descriptor instead.
func (*VipSignRewardData) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{56}
}

func (x *VipSignRewardData) GetItemid() int32 {
	if x != nil {
		return x.Itemid
	}
	return 0
}

func (x *VipSignRewardData) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *VipSignRewardData) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *VipSignRewardData) GetIcon() int32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

type CheckMallReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid     int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token   string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Apiid   int32  `protobuf:"varint,3,opt,name=apiid,proto3" json:"apiid,omitempty"`
	Isvol   bool   `protobuf:"varint,4,opt,name=isvol,proto3" json:"isvol,omitempty"`
	Voltype int32  `protobuf:"varint,5,opt,name=voltype,proto3" json:"voltype,omitempty"`
}

func (x *CheckMallReq) Reset() {
	*x = CheckMallReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckMallReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMallReq) ProtoMessage() {}

func (x *CheckMallReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMallReq.ProtoReflect.Descriptor instead.
func (*CheckMallReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{57}
}

func (x *CheckMallReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *CheckMallReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CheckMallReq) GetApiid() int32 {
	if x != nil {
		return x.Apiid
	}
	return 0
}

func (x *CheckMallReq) GetIsvol() bool {
	if x != nil {
		return x.Isvol
	}
	return false
}

func (x *CheckMallReq) GetVoltype() int32 {
	if x != nil {
		return x.Voltype
	}
	return 0
}

type CheckMallAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings []*GameMallSetting `protobuf:"bytes,1,rep,name=Settings,proto3" json:"Settings,omitempty"`
	Show     int32              `protobuf:"varint,2,opt,name=Show,proto3" json:"Show,omitempty"`
}

func (x *CheckMallAck) Reset() {
	*x = CheckMallAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckMallAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMallAck) ProtoMessage() {}

func (x *CheckMallAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMallAck.ProtoReflect.Descriptor instead.
func (*CheckMallAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{58}
}

func (x *CheckMallAck) GetSettings() []*GameMallSetting {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *CheckMallAck) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

type GameMallSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID     int32     `protobuf:"varint,1,opt,name=GameID,proto3" json:"GameID,omitempty"`
	APIID      int32     `protobuf:"varint,2,opt,name=APIID,proto3" json:"APIID,omitempty"`
	AlterID    int32     `protobuf:"varint,3,opt,name=AlterID,proto3" json:"AlterID,omitempty"`
	DescType   int32     `protobuf:"varint,4,opt,name=DescType,proto3" json:"DescType,omitempty"`
	DescRounds int32     `protobuf:"varint,5,opt,name=DescRounds,proto3" json:"DescRounds,omitempty"`
	MaxBet     float64   `protobuf:"fixed64,6,opt,name=MaxBet,proto3" json:"MaxBet,omitempty"`
	PriceOdd   float64   `protobuf:"fixed64,7,opt,name=PriceOdd,proto3" json:"PriceOdd,omitempty"`
	ForSale    bool      `protobuf:"varint,8,opt,name=ForSale,proto3" json:"ForSale,omitempty"`
	BetVec     []float64 `protobuf:"fixed64,9,rep,packed,name=BetVec,proto3" json:"BetVec,omitempty"`
	ReelNo     int32     `protobuf:"varint,10,opt,name=ReelNo,proto3" json:"ReelNo,omitempty"`
	BetNo      int32     `protobuf:"varint,11,opt,name=BetNo,proto3" json:"BetNo,omitempty"`
	Event      bool      `protobuf:"varint,12,opt,name=Event,proto3" json:"Event,omitempty"`
}

func (x *GameMallSetting) Reset() {
	*x = GameMallSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameMallSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameMallSetting) ProtoMessage() {}

func (x *GameMallSetting) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameMallSetting.ProtoReflect.Descriptor instead.
func (*GameMallSetting) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{59}
}

func (x *GameMallSetting) GetGameID() int32 {
	if x != nil {
		return x.GameID
	}
	return 0
}

func (x *GameMallSetting) GetAPIID() int32 {
	if x != nil {
		return x.APIID
	}
	return 0
}

func (x *GameMallSetting) GetAlterID() int32 {
	if x != nil {
		return x.AlterID
	}
	return 0
}

func (x *GameMallSetting) GetDescType() int32 {
	if x != nil {
		return x.DescType
	}
	return 0
}

func (x *GameMallSetting) GetDescRounds() int32 {
	if x != nil {
		return x.DescRounds
	}
	return 0
}

func (x *GameMallSetting) GetMaxBet() float64 {
	if x != nil {
		return x.MaxBet
	}
	return 0
}

func (x *GameMallSetting) GetPriceOdd() float64 {
	if x != nil {
		return x.PriceOdd
	}
	return 0
}

func (x *GameMallSetting) GetForSale() bool {
	if x != nil {
		return x.ForSale
	}
	return false
}

func (x *GameMallSetting) GetBetVec() []float64 {
	if x != nil {
		return x.BetVec
	}
	return nil
}

func (x *GameMallSetting) GetReelNo() int32 {
	if x != nil {
		return x.ReelNo
	}
	return 0
}

func (x *GameMallSetting) GetBetNo() int32 {
	if x != nil {
		return x.BetNo
	}
	return 0
}

func (x *GameMallSetting) GetEvent() bool {
	if x != nil {
		return x.Event
	}
	return false
}

type LevelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid            int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token          string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Currencynumber int32  `protobuf:"varint,3,opt,name=currencynumber,proto3" json:"currencynumber,omitempty"`
}

func (x *LevelReq) Reset() {
	*x = LevelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelReq) ProtoMessage() {}

func (x *LevelReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelReq.ProtoReflect.Descriptor instead.
func (*LevelReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{60}
}

func (x *LevelReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *LevelReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LevelReq) GetCurrencynumber() int32 {
	if x != nil {
		return x.Currencynumber
	}
	return 0
}

type BuffBackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Apiid int32  `protobuf:"varint,3,opt,name=apiid,proto3" json:"apiid,omitempty"`
	Lang  int32  `protobuf:"varint,4,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *BuffBackReq) Reset() {
	*x = BuffBackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuffBackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuffBackReq) ProtoMessage() {}

func (x *BuffBackReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuffBackReq.ProtoReflect.Descriptor instead.
func (*BuffBackReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{61}
}

func (x *BuffBackReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *BuffBackReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BuffBackReq) GetApiid() int32 {
	if x != nil {
		return x.Apiid
	}
	return 0
}

func (x *BuffBackReq) GetLang() int32 {
	if x != nil {
		return x.Lang
	}
	return 0
}

type BuffNowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid    int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Apiid  int32  `protobuf:"varint,3,opt,name=apiid,proto3" json:"apiid,omitempty"`
	Gameid int32  `protobuf:"varint,4,opt,name=gameid,proto3" json:"gameid,omitempty"`
}

func (x *BuffNowReq) Reset() {
	*x = BuffNowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuffNowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuffNowReq) ProtoMessage() {}

func (x *BuffNowReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuffNowReq.ProtoReflect.Descriptor instead.
func (*BuffNowReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{62}
}

func (x *BuffNowReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *BuffNowReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BuffNowReq) GetApiid() int32 {
	if x != nil {
		return x.Apiid
	}
	return 0
}

func (x *BuffNowReq) GetGameid() int32 {
	if x != nil {
		return x.Gameid
	}
	return 0
}

type BuffUseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid      int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Apiid    int32  `protobuf:"varint,3,opt,name=apiid,proto3" json:"apiid,omitempty"`
	Gameid   int32  `protobuf:"varint,4,opt,name=gameid,proto3" json:"gameid,omitempty"`
	Buffidx  int64  `protobuf:"varint,5,opt,name=buffidx,proto3" json:"buffidx,omitempty"`
	Buffid   int64  `protobuf:"varint,6,opt,name=buffid,proto3" json:"buffid,omitempty"`
	Currency int32  `protobuf:"varint,7,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *BuffUseReq) Reset() {
	*x = BuffUseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuffUseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuffUseReq) ProtoMessage() {}

func (x *BuffUseReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuffUseReq.ProtoReflect.Descriptor instead.
func (*BuffUseReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{63}
}

func (x *BuffUseReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *BuffUseReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BuffUseReq) GetApiid() int32 {
	if x != nil {
		return x.Apiid
	}
	return 0
}

func (x *BuffUseReq) GetGameid() int32 {
	if x != nil {
		return x.Gameid
	}
	return 0
}

func (x *BuffUseReq) GetBuffidx() int64 {
	if x != nil {
		return x.Buffidx
	}
	return 0
}

func (x *BuffUseReq) GetBuffid() int64 {
	if x != nil {
		return x.Buffid
	}
	return 0
}

func (x *BuffUseReq) GetCurrency() int32 {
	if x != nil {
		return x.Currency
	}
	return 0
}

type BuffParamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid    int32   `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token  string  `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Idlist []int64 `protobuf:"varint,3,rep,packed,name=idlist,proto3" json:"idlist,omitempty"`
}

func (x *BuffParamReq) Reset() {
	*x = BuffParamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuffParamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuffParamReq) ProtoMessage() {}

func (x *BuffParamReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuffParamReq.ProtoReflect.Descriptor instead.
func (*BuffParamReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{64}
}

func (x *BuffParamReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *BuffParamReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BuffParamReq) GetIdlist() []int64 {
	if x != nil {
		return x.Idlist
	}
	return nil
}

type VerifyGiftCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid      int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Apiid    int32  `protobuf:"varint,3,opt,name=apiid,proto3" json:"apiid,omitempty"`
	Giftcode string `protobuf:"bytes,4,opt,name=giftcode,proto3" json:"giftcode,omitempty"`
}

func (x *VerifyGiftCodeReq) Reset() {
	*x = VerifyGiftCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyGiftCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyGiftCodeReq) ProtoMessage() {}

func (x *VerifyGiftCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyGiftCodeReq.ProtoReflect.Descriptor instead.
func (*VerifyGiftCodeReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{65}
}

func (x *VerifyGiftCodeReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *VerifyGiftCodeReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VerifyGiftCodeReq) GetApiid() int32 {
	if x != nil {
		return x.Apiid
	}
	return 0
}

func (x *VerifyGiftCodeReq) GetGiftcode() string {
	if x != nil {
		return x.Giftcode
	}
	return ""
}

type CheckBlockGiftCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid   int32  `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CheckBlockGiftCodeReq) Reset() {
	*x = CheckBlockGiftCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckBlockGiftCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBlockGiftCodeReq) ProtoMessage() {}

func (x *CheckBlockGiftCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBlockGiftCodeReq.ProtoReflect.Descriptor instead.
func (*CheckBlockGiftCodeReq) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{66}
}

func (x *CheckBlockGiftCodeReq) GetAid() int32 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *CheckBlockGiftCodeReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type VerifyGiftCodeAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Type  int32 `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Round int32 `protobuf:"varint,3,opt,name=Round,proto3" json:"Round,omitempty"`
}

func (x *VerifyGiftCodeAck) Reset() {
	*x = VerifyGiftCodeAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyGiftCodeAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyGiftCodeAck) ProtoMessage() {}

func (x *VerifyGiftCodeAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyGiftCodeAck.ProtoReflect.Descriptor instead.
func (*VerifyGiftCodeAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{67}
}

func (x *VerifyGiftCodeAck) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *VerifyGiftCodeAck) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *VerifyGiftCodeAck) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

type CheckBlockGiftCodeAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code             int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message          string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	IsBlock          bool   `protobuf:"varint,3,opt,name=IsBlock,proto3" json:"IsBlock,omitempty"`
	BlockDuration    int32  `protobuf:"varint,4,opt,name=BlockDuration,proto3" json:"BlockDuration,omitempty"`
	ErrorInputAmount int32  `protobuf:"varint,5,opt,name=ErrorInputAmount,proto3" json:"ErrorInputAmount,omitempty"`
}

func (x *CheckBlockGiftCodeAck) Reset() {
	*x = CheckBlockGiftCodeAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaiaProto_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckBlockGiftCodeAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckBlockGiftCodeAck) ProtoMessage() {}

func (x *CheckBlockGiftCodeAck) ProtoReflect() protoreflect.Message {
	mi := &file_gaiaProto_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckBlockGiftCodeAck.ProtoReflect.Descriptor instead.
func (*CheckBlockGiftCodeAck) Descriptor() ([]byte, []int) {
	return file_gaiaProto_proto_rawDescGZIP(), []int{68}
}

func (x *CheckBlockGiftCodeAck) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckBlockGiftCodeAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckBlockGiftCodeAck) GetIsBlock() bool {
	if x != nil {
		return x.IsBlock
	}
	return false
}

func (x *CheckBlockGiftCodeAck) GetBlockDuration() int32 {
	if x != nil {
		return x.BlockDuration
	}
	return 0
}

func (x *CheckBlockGiftCodeAck) GetErrorInputAmount() int32 {
	if x != nil {
		return x.ErrorInputAmount
	}
	return 0
}

var File_gaiaProto_proto protoreflect.FileDescriptor

var file_gaiaProto_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x70, 0x0a, 0x0c,
	0x47, 0x61, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7c,
	0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x53, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5b, 0x0a, 0x07,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x22, 0xd4, 0x03, 0x0a, 0x0b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6a, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6a, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x70, 0x57, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6a, 0x70, 0x57, 0x69, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x75, 0x6c, 0x6c, 0x4a, 0x70, 0x57, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x4a, 0x70, 0x57, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x72, 0x69, 0x61, 0x6c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x61, 0x77, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x72, 0x65, 0x65, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2b, 0x0a,
	0x08, 0x63, 0x61, 0x72, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75,
	0x66, 0x66, 0x6d, 0x75, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x75, 0x66,
	0x66, 0x6d, 0x75, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x6d, 0x75, 0x6c, 0x77,
	0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x6d, 0x75,
	0x6c, 0x77, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x78, 0x62, 0x65,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x75, 0x66, 0x66, 0x65, 0x78, 0x62,
	0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x66, 0x66, 0x66, 0x72, 0x65, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x75, 0x66, 0x66, 0x66, 0x72, 0x65, 0x65, 0x12, 0x34,
	0x0a, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x22, 0x74, 0x0a, 0x0e, 0x44, 0x65, 0x62, 0x72, 0x69, 0x73, 0x41, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x72, 0x0a, 0x0e, 0x44, 0x65, 0x62, 0x72, 0x69, 0x73,
	0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6e, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x6e, 0x6f, 0x22, 0x5f, 0x0a, 0x0d, 0x44, 0x65,
	0x62, 0x72, 0x69, 0x73, 0x50, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x9f, 0x01, 0x0a, 0x11,
	0x44, 0x65, 0x62, 0x72, 0x69, 0x73, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x61, 0x6e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x66, 0x6e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x37, 0x0a,
	0x0d, 0x46, 0x75, 0x6c, 0x6c, 0x4a, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3a, 0x0a, 0x10, 0x46, 0x75, 0x6c, 0x6c, 0x4a, 0x50,
	0x49, 0x6e, 0x66, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x3a, 0x0a, 0x10, 0x46, 0x75, 0x6c, 0x6c, 0x4a, 0x50, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x69,
	0x0a, 0x0d, 0x46, 0x75, 0x6c, 0x6c, 0x4a, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e,
	0x76, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x76, 0x69,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x62, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x62, 0x65, 0x74, 0x22, 0x57, 0x0a, 0x10, 0x46, 0x75, 0x6c,
	0x6c, 0x4a, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x61, 0x63, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x4a, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x64, 0x0a, 0x0a, 0x46, 0x75, 0x6c, 0x6c, 0x4a, 0x50, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x61, 0x70, 0x69, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x22, 0x44, 0x0a, 0x10, 0x46, 0x75, 0x6c, 0x6c,
	0x4a, 0x50, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x69,
	0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x4a, 0x50, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x6d,
	0x0a, 0x11, 0x46, 0x75, 0x6c, 0x6c, 0x4a, 0x50, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x77, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x71, 0x0a,
	0x0b, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x74, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xae, 0x01, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x55,
	0x73, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x60, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa1, 0x01, 0x0a, 0x0f, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x4e, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x4e, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x5f, 0x0a, 0x0d, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x0c, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x38, 0x0a, 0x0e, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x53, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x63, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x4c,
	0x44, 0x46, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x4c, 0x44, 0x46, 0x12, 0x2a, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x03, 0x72, 0x6f,
	0x77, 0x22, 0xa5, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x62, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x77, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x64, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6f, 0x64, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x77, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x61, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x77, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x75, 0x6e, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x6b,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x63, 0x6b, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x63, 0x6b, 0x22, 0x46, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x6b, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x63, 0x6b, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x69, 0x74, 0x22, 0x5c, 0x0a,
	0x0c, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x60, 0x0a, 0x0e, 0x54,
	0x72, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6e, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6e, 0x6f, 0x22, 0x4e, 0x0a,
	0x0e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x47, 0x69, 0x76, 0x65, 0x55, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6e, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6e, 0x6f, 0x22, 0x85, 0x03,
	0x0a, 0x0c, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x61, 0x63, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x77, 0x61,
	0x63, 0x74, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x77, 0x61,
	0x63, 0x74, 0x6e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x09,
	0x61, 0x77, 0x61, 0x72, 0x64, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x33, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x74, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x74, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x03, 0x62, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x12, 0x35, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x72, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x0a, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x67, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x67, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x75, 0x0a, 0x09, 0x54, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x62, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xc0, 0x01, 0x0a, 0x0a, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x69, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x61, 0x70, 0x69, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x61, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x61, 0x63,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x6e, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x6e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x62, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x62, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x77, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x77, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x22, 0x5f, 0x0a, 0x0e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67,
	0x6e, 0x55, 0x70, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x6b, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x63, 0x6b, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x33, 0x0a, 0x09, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x74, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x40, 0x0a, 0x0e, 0x54, 0x72, 0x69, 0x61, 0x6c, 0x47, 0x69,
	0x76, 0x65, 0x55, 0x70, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x6b, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x63, 0x6b, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x22, 0x38, 0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x4a, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x3b, 0x0a, 0x11, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4a, 0x50, 0x49, 0x6e, 0x66, 0x6f,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3b,
	0x0a, 0x11, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4a, 0x50, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x61, 0x0a, 0x0f, 0x55,
	0x6e, 0x69, 0x6f, 0x6e, 0x4a, 0x50, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3c,
	0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4a, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x6b,
	0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x4a, 0x50, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x0b,
	0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4a, 0x50, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4a, 0x50,
	0x49, 0x6e, 0x66, 0x6f, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x69, 0x61,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4a, 0x50, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x05, 0x70, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x67, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x46,
	0x0a, 0x11, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4a, 0x50, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x41, 0x63, 0x6b, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x4a, 0x50, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x55, 0x6e, 0x69, 0x6f, 0x6e,
	0x4a, 0x50, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x77, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x22,
	0x25, 0x0a, 0x0f, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x4a, 0x50, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41,
	0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x0e, 0x56, 0x69, 0x70, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x78, 0x0a, 0x10, 0x56, 0x69, 0x70, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x58, 0x0a, 0x0e, 0x56, 0x69, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x41, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x69, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x89, 0x01, 0x0a,
	0x0f, 0x56, 0x69, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x3e, 0x0a, 0x0c, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x69, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x69, 0x0a, 0x0f, 0x56, 0x69, 0x70, 0x53,
	0x69, 0x67, 0x6e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x76, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x76, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x6f,
	0x70, 0x65, 0x6e, 0x22, 0x5c, 0x0a, 0x10, 0x56, 0x69, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x41, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x69, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x6b, 0x0a, 0x11, 0x56, 0x69, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x7c,
	0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x69, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x69, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x76, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x76,
	0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5a, 0x0a, 0x0c,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x61, 0x6c, 0x6c, 0x41, 0x63, 0x6b, 0x12, 0x36, 0x0a, 0x08,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x61, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d,
	0x61, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x22, 0xbf, 0x02, 0x0a, 0x0f, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x50, 0x49, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x41, 0x50, 0x49, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x73, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x65, 0x73, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x73, 0x63, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x44, 0x65, 0x73, 0x63, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x78, 0x42, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x4d, 0x61, 0x78, 0x42, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x4f, 0x64, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x4f, 0x64, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x46, 0x6f, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x42, 0x65, 0x74, 0x56, 0x65, 0x63, 0x18, 0x09, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06,
	0x42, 0x65, 0x74, 0x56, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x65, 0x6c, 0x4e, 0x6f,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x65, 0x65, 0x6c, 0x4e, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x42, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x42,
	0x65, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x08, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5f, 0x0a, 0x0b, 0x42, 0x75, 0x66, 0x66, 0x42, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x69, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70,
	0x69, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x62, 0x0a, 0x0a, 0x42, 0x75, 0x66, 0x66, 0x4e,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x69, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70,
	0x69, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x0a,
	0x42, 0x75, 0x66, 0x66, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x69, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x61, 0x70, 0x69, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x69, 0x64, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x62, 0x75, 0x66, 0x66, 0x69, 0x64, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75,
	0x66, 0x66, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x4e,
	0x0a, 0x0c, 0x42, 0x75, 0x66, 0x66, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x69, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x6d,
	0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x69, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x69, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3f, 0x0a,
	0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x69, 0x66, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x51,
	0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x41, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x22, 0xb1, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x47, 0x69, 0x66, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x49, 0x73, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x67, 0x61, 0x69, 0x61, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gaiaProto_proto_rawDescOnce sync.Once
	file_gaiaProto_proto_rawDescData = file_gaiaProto_proto_rawDesc
)

func file_gaiaProto_proto_rawDescGZIP() []byte {
	file_gaiaProto_proto_rawDescOnce.Do(func() {
		file_gaiaProto_proto_rawDescData = protoimpl.X.CompressGZIP(file_gaiaProto_proto_rawDescData)
	})
	return file_gaiaProto_proto_rawDescData
}

var file_gaiaProto_proto_msgTypes = make([]protoimpl.MessageInfo, 69)
var file_gaiaProto_proto_goTypes = []interface{}{
	(*GaiaResponse)(nil),          // 0: gaiaProto.GaiaResponse
	(*Card)(nil),                  // 1: gaiaProto.Card
	(*Mission)(nil),               // 2: gaiaProto.Mission
	(*ServiceData)(nil),           // 3: gaiaProto.ServiceData
	(*DebrisAInfoReq)(nil),        // 4: gaiaProto.DebrisAInfoReq
	(*DebrisPInfoReq)(nil),        // 5: gaiaProto.DebrisPInfoReq
	(*DebrisPGetReq)(nil),         // 6: gaiaProto.DebrisPGetReq
	(*DebrisExchangeReq)(nil),     // 7: gaiaProto.DebrisExchangeReq
	(*FullJPInfoReq)(nil),         // 8: gaiaProto.FullJPInfoReq
	(*FullJPInfoAllReq)(nil),      // 9: gaiaProto.FullJPInfoAllReq
	(*FullJPHistoryReq)(nil),      // 10: gaiaProto.FullJPHistoryReq
	(*FullJPInfoAck)(nil),         // 11: gaiaProto.FullJPInfoAck
	(*FullJPInfoAllAck)(nil),      // 12: gaiaProto.FullJPInfoAllAck
	(*FullJPList)(nil),            // 13: gaiaProto.FullJPList
	(*FullJPHistoryAck)(nil),      // 14: gaiaProto.FullJPHistoryAck
	(*FullJPHistoryData)(nil),     // 15: gaiaProto.FullJPHistoryData
	(*ItemListReq)(nil),           // 16: gaiaProto.ItemListReq
	(*ItemAllGameReq)(nil),        // 17: gaiaProto.ItemAllGameReq
	(*ItemUseCardReq)(nil),        // 18: gaiaProto.ItemUseCardReq
	(*ItemCheckNewReq)(nil),       // 19: gaiaProto.ItemCheckNewReq
	(*ItemGetMailReq)(nil),        // 20: gaiaProto.ItemGetMailReq
	(*ItemSetReadReq)(nil),        // 21: gaiaProto.ItemSetReadReq
	(*MissionDailyReq)(nil),       // 22: gaiaProto.MissionDailyReq
	(*ReplayListReq)(nil),         // 23: gaiaProto.ReplayListReq
	(*ReplayGetReq)(nil),          // 24: gaiaProto.ReplayGetReq
	(*ReplayCheckReq)(nil),        // 25: gaiaProto.ReplayCheckReq
	(*ReplayListAck)(nil),         // 26: gaiaProto.ReplayListAck
	(*ReplayLDF)(nil),             // 27: gaiaProto.ReplayLDF
	(*ReplayLClient)(nil),         // 28: gaiaProto.ReplayLClient
	(*ReplayGetAck)(nil),          // 29: gaiaProto.ReplayGetAck
	(*ReplayCheckAck)(nil),        // 30: gaiaProto.ReplayCheckAck
	(*TrialInfoReq)(nil),          // 31: gaiaProto.TrialInfoReq
	(*TrialSignUpReq)(nil),        // 32: gaiaProto.TrialSignUpReq
	(*TrialGiveUpReq)(nil),        // 33: gaiaProto.TrialGiveUpReq
	(*TrialInfoAck)(nil),          // 34: gaiaProto.TrialInfoAck
	(*TrialAward)(nil),            // 35: gaiaProto.TrialAward
	(*TrialItem)(nil),             // 36: gaiaProto.TrialItem
	(*TrialPData)(nil),            // 37: gaiaProto.TrialPData
	(*TrialSignUpAck)(nil),        // 38: gaiaProto.TrialSignUpAck
	(*TrialGiveUpAck)(nil),        // 39: gaiaProto.TrialGiveUpAck
	(*UnionJPInfoReq)(nil),        // 40: gaiaProto.UnionJPInfoReq
	(*UnionJPInfoAllReq)(nil),     // 41: gaiaProto.UnionJPInfoAllReq
	(*UnionJPHistoryReq)(nil),     // 42: gaiaProto.UnionJPHistoryReq
	(*UnionJPBlockReq)(nil),       // 43: gaiaProto.UnionJPBlockReq
	(*UnionJPInfoAck)(nil),        // 44: gaiaProto.UnionJPInfoAck
	(*UnionJPPool)(nil),           // 45: gaiaProto.UnionJPPool
	(*UnionJPInfoAllAck)(nil),     // 46: gaiaProto.UnionJPInfoAllAck
	(*UnionJPHistoryAck)(nil),     // 47: gaiaProto.UnionJPHistoryAck
	(*UnionJPHistoryData)(nil),    // 48: gaiaProto.UnionJPHistoryData
	(*UnionJPBlockAck)(nil),       // 49: gaiaProto.UnionJPBlockAck
	(*VipSignInfoReq)(nil),        // 50: gaiaProto.VipSignInfoReq
	(*VipSignRewardReq)(nil),      // 51: gaiaProto.VipSignRewardReq
	(*VipSignInfoAck)(nil),        // 52: gaiaProto.VipSignInfoAck
	(*VipSignInfoData)(nil),       // 53: gaiaProto.VipSignInfoData
	(*VipSignTreasure)(nil),       // 54: gaiaProto.VipSignTreasure
	(*VipSignRewardAck)(nil),      // 55: gaiaProto.VipSignRewardAck
	(*VipSignRewardData)(nil),     // 56: gaiaProto.VipSignRewardData
	(*CheckMallReq)(nil),          // 57: gaiaProto.CheckMallReq
	(*CheckMallAck)(nil),          // 58: gaiaProto.CheckMallAck
	(*GameMallSetting)(nil),       // 59: gaiaProto.GameMallSetting
	(*LevelReq)(nil),              // 60: gaiaProto.LevelReq
	(*BuffBackReq)(nil),           // 61: gaiaProto.BuffBackReq
	(*BuffNowReq)(nil),            // 62: gaiaProto.BuffNowReq
	(*BuffUseReq)(nil),            // 63: gaiaProto.BuffUseReq
	(*BuffParamReq)(nil),          // 64: gaiaProto.BuffParamReq
	(*VerifyGiftCodeReq)(nil),     // 65: gaiaProto.VerifyGiftCodeReq
	(*CheckBlockGiftCodeReq)(nil), // 66: gaiaProto.CheckBlockGiftCodeReq
	(*VerifyGiftCodeAck)(nil),     // 67: gaiaProto.VerifyGiftCodeAck
	(*CheckBlockGiftCodeAck)(nil), // 68: gaiaProto.CheckBlockGiftCodeAck
}
var file_gaiaProto_proto_depIdxs = []int32{
	1,  // 0: gaiaProto.ServiceData.cardlist:type_name -> gaiaProto.Card
	2,  // 1: gaiaProto.ServiceData.missionlist:type_name -> gaiaProto.Mission
	13, // 2: gaiaProto.FullJPInfoAllAck.list:type_name -> gaiaProto.FullJPList
	15, // 3: gaiaProto.FullJPHistoryAck.list:type_name -> gaiaProto.FullJPHistoryData
	27, // 4: gaiaProto.ReplayListAck.list:type_name -> gaiaProto.ReplayLDF
	28, // 5: gaiaProto.ReplayLDF.row:type_name -> gaiaProto.ReplayLClient
	35, // 6: gaiaProto.TrialInfoAck.awarddesc:type_name -> gaiaProto.TrialAward
	37, // 7: gaiaProto.TrialInfoAck.trialinfo:type_name -> gaiaProto.TrialPData
	35, // 8: gaiaProto.TrialInfoAck.remindinfo:type_name -> gaiaProto.TrialAward
	36, // 9: gaiaProto.TrialAward.data:type_name -> gaiaProto.TrialItem
	37, // 10: gaiaProto.TrialSignUpAck.trialinfo:type_name -> gaiaProto.TrialPData
	45, // 11: gaiaProto.UnionJPInfoAck.list:type_name -> gaiaProto.UnionJPPool
	45, // 12: gaiaProto.UnionJPInfoAllAck.plist:type_name -> gaiaProto.UnionJPPool
	48, // 13: gaiaProto.UnionJPHistoryAck.list:type_name -> gaiaProto.UnionJPHistoryData
	53, // 14: gaiaProto.VipSignInfoAck.info:type_name -> gaiaProto.VipSignInfoData
	54, // 15: gaiaProto.VipSignInfoData.treasurelist:type_name -> gaiaProto.VipSignTreasure
	56, // 16: gaiaProto.VipSignRewardAck.info:type_name -> gaiaProto.VipSignRewardData
	59, // 17: gaiaProto.CheckMallAck.Settings:type_name -> gaiaProto.GameMallSetting
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_gaiaProto_proto_init() }
func file_gaiaProto_proto_init() {
	if File_gaiaProto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gaiaProto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GaiaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebrisAInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebrisPInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebrisPGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebrisExchangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullJPInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullJPInfoAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullJPHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullJPInfoAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullJPInfoAllAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullJPList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullJPHistoryAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullJPHistoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemAllGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseCardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemCheckNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGetMailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSetReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionDailyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayListAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayLDF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayLClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayGetAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayCheckAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrialInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrialSignUpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrialGiveUpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrialInfoAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrialAward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrialItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrialPData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrialSignUpAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrialGiveUpAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionJPInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionJPInfoAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionJPHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionJPBlockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionJPInfoAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionJPPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionJPInfoAllAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionJPHistoryAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionJPHistoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnionJPBlockAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipSignInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipSignRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipSignInfoAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipSignInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipSignTreasure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipSignRewardAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipSignRewardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckMallReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckMallAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameMallSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuffBackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuffNowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuffUseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuffParamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyGiftCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckBlockGiftCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyGiftCodeAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaiaProto_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckBlockGiftCodeAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gaiaProto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   69,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gaiaProto_proto_goTypes,
		DependencyIndexes: file_gaiaProto_proto_depIdxs,
		MessageInfos:      file_gaiaProto_proto_msgTypes,
	}.Build()
	File_gaiaProto_proto = out.File
	file_gaiaProto_proto_rawDesc = nil
	file_gaiaProto_proto_goTypes = nil
	file_gaiaProto_proto_depIdxs = nil
}
